import { DatabaseStorage } from './server/storage';
import { type InsertCategory, type ProductInput } from './shared/schema';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç—Ä–æ–∫–∏
function cleanText(text: any): string {
  if (!text) return '';
  return String(text).trim().replace(/\s+/g, ' ');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ slug
function generateSlug(text: string): string {
  return text
    .toLowerCase()
    .replace(/[^a-z–∞-—è—ë0-9\s-]/g, '')
    .replace(/\s+/g, '-')
    .replace(/-+/g, '-')
    .trim();
}

// –ú–∞–ø–ø–∏–Ω–≥ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
const categoryImages = {
  '–î—Ä–µ–ª–∏': 'https://images.unsplash.com/photo-1504148455328-c376907d081c?w=300&h=200&fit=crop',
  '–®—É—Ä—É–ø–æ–≤–µ—Ä—Ç—ã': 'https://images.unsplash.com/photo-1581833971358-2c8b550f87b3?w=300&h=200&fit=crop',
  '–ì–∞–π–∫–æ–≤–µ—Ä—Ç—ã': 'https://images.unsplash.com/photo-1609205853540-a4eb8a98e85b?w=300&h=200&fit=crop',
  '–ü–µ—Ä—Ñ–æ—Ä–∞—Ç–æ—Ä—ã': 'https://images.unsplash.com/photo-1562408590-e32931084e23?w=300&h=200&fit=crop',
  '–£–≥–ª–æ—à–ª–∏—Ñ–æ–≤–∞–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã': 'https://images.unsplash.com/photo-1572981779307-38b8cabb2407?w=300&h=200&fit=crop',
  '–ü–∏–ª—ã': 'https://images.unsplash.com/photo-1616401784845-180882ba9ba8?w=300&h=200&fit=crop',
  '–†—É–±–∞–Ω–∫–∏': 'https://images.unsplash.com/photo-1558618047-3c8c76ca7d13?w=300&h=200&fit=crop',
  '–õ–æ–±–∑–∏–∫–∏': 'https://images.unsplash.com/photo-1572981779307-38b8cabb2407?w=300&h=200&fit=crop',
  '–§—Ä–µ–∑–µ—Ä—ã': 'https://images.unsplash.com/photo-1616401784845-180882ba9ba8?w=300&h=200&fit=crop',
  '–ú–∏–∫—Å–µ—Ä—ã': 'https://images.unsplash.com/photo-1581833971358-2c8b550f87b3?w=300&h=200&fit=crop',
  '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã': 'https://images.unsplash.com/photo-1621905251189-08b45d6a269e?w=300&h=200&fit=crop',
  '–ö–æ–º–ø—Ä–µ—Å—Å–æ—Ä—ã': 'https://images.unsplash.com/photo-1621905251078-3f9c827d1fcf?w=300&h=200&fit=crop',
  '–°–≤–∞—Ä–æ—á–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ': 'https://images.unsplash.com/photo-1581092795360-fd1ca04f0952?w=300&h=200&fit=crop',
  '–ö—Ä–∞—Å–∫–æ–ø—É–ª—å—Ç—ã': 'https://images.unsplash.com/photo-1589939705384-5185137a7f0f?w=300&h=200&fit=crop',
  '–ù–∞—Å–æ—Å—ã': 'https://images.unsplash.com/photo-1621905251189-08b45d6a269e?w=300&h=200&fit=crop',
  '–ü–æ–ª–∏—Ä–æ–≤–∞–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã': 'https://images.unsplash.com/photo-1572981779307-38b8cabb2407?w=300&h=200&fit=crop',
  '–°—Ç–∞–Ω–∫–∏': 'https://images.unsplash.com/photo-1565003033444-69c5db2c27b1?w=300&h=200&fit=crop',
  '–ò–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã': 'https://images.unsplash.com/photo-1581092921461-eab62e97a780?w=300&h=200&fit=crop',
  '–†—É—á–Ω–æ–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç': 'https://images.unsplash.com/photo-1504148455328-c376907d081c?w=300&h=200&fit=crop',
  '–°–∞–¥–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞': 'https://images.unsplash.com/photo-1416879595882-3373a0480b5b?w=300&h=200&fit=crop',
  '–£–±–æ—Ä–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞': 'https://images.unsplash.com/photo-1558618666-fcd25c85cd64?w=300&h=200&fit=crop',
  '–ü–∞—è–ª—å–Ω–∏–∫–∏': 'https://images.unsplash.com/photo-1581092921461-eab62e97a780?w=300&h=200&fit=crop',
  '–§–µ–Ω—ã —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ': 'https://images.unsplash.com/photo-1581833971358-2c8b550f87b3?w=300&h=200&fit=crop',
  '–≠–ª–µ–∫—Ç—Ä–æ–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ': 'https://images.unsplash.com/photo-1581092795360-fd1ca04f0952?w=300&h=200&fit=crop',
  '–ü–Ω–µ–≤–º–æ–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã': 'https://images.unsplash.com/photo-1621905251078-3f9c827d1fcf?w=300&h=200&fit=crop',
  '–ú–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã': 'https://images.unsplash.com/photo-1504148455328-c376907d081c?w=300&h=200&fit=crop',
  '–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –ª–µ—Å–∞': 'https://images.unsplash.com/photo-1558618047-3c8c76ca7d13?w=300&h=200&fit=crop',
  '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã': 'https://images.unsplash.com/photo-1504148455328-c376907d081c?w=300&h=200&fit=crop'
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
function getCategoryImage(categoryName: string): string {
  const cleanName = cleanText(categoryName);
  
  // –ò—â–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
  if (categoryImages[cleanName]) {
    return categoryImages[cleanName];
  }
  
  // –ò—â–µ–º —á–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
  for (const [key, image] of Object.entries(categoryImages)) {
    if (cleanName.includes(key) || key.includes(cleanName)) {
      return image;
    }
  }
  
  return categoryImages['–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã']; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
function generateProductImage(productName: string, sku: string): string {
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –∏ –ø–æ–¥–±–∏—Ä–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  const name = productName.toLowerCase();
  
  if (name.includes('–¥—Ä–µ–ª—å') || name.includes('drill')) {
    return `https://images.unsplash.com/photo-1504148455328-c376907d081c?w=400&h=300&fit=crop&auto=format&q=80`;
  }
  if (name.includes('—à—É—Ä—É–ø–æ–≤–µ—Ä—Ç') || name.includes('screwdriver')) {
    return `https://images.unsplash.com/photo-1581833971358-2c8b550f87b3?w=400&h=300&fit=crop&auto=format&q=80`;
  }
  if (name.includes('–≥–∞–π–∫–æ–≤–µ—Ä—Ç') || name.includes('impact')) {
    return `https://images.unsplash.com/photo-1609205853540-a4eb8a98e85b?w=400&h=300&fit=crop&auto=format&q=80`;
  }
  if (name.includes('–ø–µ—Ä—Ñ–æ—Ä–∞—Ç–æ—Ä') || name.includes('hammer')) {
    return `https://images.unsplash.com/photo-1562408590-e32931084e23?w=400&h=300&fit=crop&auto=format&q=80`;
  }
  if (name.includes('–±–æ–ª–≥–∞—Ä–∫') || name.includes('grinder')) {
    return `https://images.unsplash.com/photo-1572981779307-38b8cabb2407?w=400&h=300&fit=crop&auto=format&q=80`;
  }
  if (name.includes('–ø–∏–ª–∞') || name.includes('saw')) {
    return `https://images.unsplash.com/photo-1616401784845-180882ba9ba8?w=400&h=300&fit=crop&auto=format&q=80`;
  }
  if (name.includes('—Ä—É–±–∞–Ω–æ–∫') || name.includes('planer')) {
    return `https://images.unsplash.com/photo-1558618047-3c8c76ca7d13?w=400&h=300&fit=crop&auto=format&q=80`;
  }
  if (name.includes('—Ñ—Ä–µ–∑–µ—Ä') || name.includes('router')) {
    return `https://images.unsplash.com/photo-1616401784845-180882ba9ba8?w=400&h=300&fit=crop&auto=format&q=80`;
  }
  if (name.includes('—Å–≤–∞—Ä–æ—á–Ω') || name.includes('weld')) {
    return `https://images.unsplash.com/photo-1581092795360-fd1ca04f0952?w=400&h=300&fit=crop&auto=format&q=80`;
  }
  if (name.includes('–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä') || name.includes('generator')) {
    return `https://images.unsplash.com/photo-1621905251189-08b45d6a269e?w=400&h=300&fit=crop&auto=format&q=80`;
  }
  
  // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - –æ–±—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
  return `https://images.unsplash.com/photo-1504148455328-c376907d081c?w=400&h=300&fit=crop&auto=format&q=80`;
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
async function updateCategoryImages() {
  try {
    console.log('üñºÔ∏è –û–±–Ω–æ–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π...');
    
    const storage = new DatabaseStorage();
    const categories = await storage.getAllCategories();
    
    let updatedCount = 0;
    
    for (const category of categories) {
      const imageUrl = getCategoryImage(category.name);
      
      try {
        await storage.updateCategory(category.id, {
          icon: imageUrl
        });
        updatedCount++;
        console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${category.name}`);
      } catch (error: any) {
        console.log(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${category.name}: ${error.message}`);
      }
    }
    
    console.log(`\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è ${updatedCount} –∫–∞—Ç–µ–≥–æ—Ä–∏–π`);
    
  } catch (error: any) {
    console.error('üí• –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error.message);
  }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤
async function updateProductImages() {
  try {
    console.log('üñºÔ∏è –û–±–Ω–æ–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤...');
    
    const storage = new DatabaseStorage();
    const products = await storage.getAllProducts();
    
    let updatedCount = 0;
    
    for (const product of products) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      if (product.imageUrl && product.imageUrl.trim() !== '') {
        continue; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–æ–≤–∞—Ä—ã, —É –∫–æ—Ç–æ—Ä—ã—Ö —É–∂–µ –µ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      }
      
      const imageUrl = generateProductImage(product.name, product.sku);
      
      try {
        await storage.updateProduct(product.id, {
          imageUrl: imageUrl
        });
        updatedCount++;
        
        if (updatedCount % 50 === 0) {
          console.log(`üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–æ ${updatedCount} —Ç–æ–≤–∞—Ä–æ–≤...`);
        }
      } catch (error: any) {
        console.log(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ ${product.sku}: ${error.message}`);
      }
    }
    
    console.log(`\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è ${updatedCount} —Ç–æ–≤–∞—Ä–æ–≤`);
    
  } catch (error: any) {
    console.error('üí• –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤:', error.message);
  }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –∏–∑ Excel –¥–∞–Ω–Ω—ã—Ö
async function createAdditionalProducts() {
  try {
    console.log('üì¶ –°–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏...');
    
    const storage = new DatabaseStorage();
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ (–Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∏—á–Ω–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞ DCK)
    const additionalProducts = [
      {
        name: '–î—Ä–µ–ª—å —É–¥–∞—Ä–Ω–∞—è DCK DHL-950',
        sku: 'DCK-DHL-950',
        price: 12500,
        category: '–î—Ä–µ–ª–∏',
        description: '–£–¥–∞—Ä–Ω–∞—è –¥—Ä–µ–ª—å –º–æ—â–Ω–æ—Å—Ç—å—é 950 –í—Ç —Å —Ä–µ–≤–µ—Ä—Å–æ–º –∏ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∫–æ–π –æ–±–æ—Ä–æ—Ç–æ–≤'
      },
      {
        name: '–®—É—Ä—É–ø–æ–≤–µ—Ä—Ç –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–Ω—ã–π DCK CDL-18V',
        sku: 'DCK-CDL-18V',
        price: 8900,
        category: '–®—É—Ä—É–ø–æ–≤–µ—Ä—Ç—ã',
        description: '–ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä–Ω—ã–π —à—É—Ä—É–ø–æ–≤–µ—Ä—Ç 18–í —Å Li-ion –±–∞—Ç–∞—Ä–µ–µ–π'
      },
      {
        name: '–ì–∞–π–∫–æ–≤–µ—Ä—Ç —É–¥–∞—Ä–Ω—ã–π DCK IWR-1200',
        sku: 'DCK-IWR-1200',
        price: 15600,
        category: '–ì–∞–π–∫–æ–≤–µ—Ä—Ç—ã',
        description: '–£–¥–∞—Ä–Ω—ã–π –≥–∞–π–∫–æ–≤–µ—Ä—Ç 1200 –í—Ç –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è'
      },
      {
        name: '–ü–µ—Ä—Ñ–æ—Ä–∞—Ç–æ—Ä SDS-Plus DCK RH-800',
        sku: 'DCK-RH-800',
        price: 18900,
        category: '–ü–µ—Ä—Ñ–æ—Ä–∞—Ç–æ—Ä—ã',
        description: '–ü–µ—Ä—Ñ–æ—Ä–∞—Ç–æ—Ä SDS-Plus 800 –í—Ç —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –¥–æ–ª–±–ª–µ–Ω–∏—è'
      },
      {
        name: '–ë–æ–ª–≥–∞—Ä–∫–∞ DCK AG-125/1100',
        sku: 'DCK-AG-125-1100',
        price: 6700,
        category: '–£–≥–ª–æ—à–ª–∏—Ñ–æ–≤–∞–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã',
        description: '–£–≥–ª–æ—à–ª–∏—Ñ–æ–≤–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞ 125 –º–º, 1100 –í—Ç'
      },
      {
        name: '–ü–∏–ª–∞ —Ü–∏—Ä–∫—É–ª—è—Ä–Ω–∞—è DCK CS-190/1600',
        sku: 'DCK-CS-190-1600',
        price: 14200,
        category: '–ü–∏–ª—ã',
        description: '–¶–∏—Ä–∫—É–ª—è—Ä–Ω–∞—è –ø–∏–ª–∞ 190 –º–º —Å –ª–∞–∑–µ—Ä–Ω—ã–º —É–∫–∞–∑–∞—Ç–µ–ª–µ–º'
      },
      {
        name: '–†—É–±–∞–Ω–æ–∫ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–π DCK EP-82/650',
        sku: 'DCK-EP-82-650',
        price: 9800,
        category: '–†—É–±–∞–Ω–∫–∏',
        description: '–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–π —Ä—É–±–∞–Ω–æ–∫ 82 –º–º, –≥–ª—É–±–∏–Ω–∞ —Å—Ç—Ä–æ–≥–∞–Ω–∏—è –¥–æ 2 –º–º'
      },
      {
        name: '–§—Ä–µ–∑–µ—Ä DCK OF-1010/1000',
        sku: 'DCK-OF-1010-1000',
        price: 16800,
        category: '–§—Ä–µ–∑–µ—Ä—ã',
        description: '–í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Ñ—Ä–µ–∑–µ—Ä 1000 –í—Ç —Å —Ü–∞–Ω–≥–æ–≤—ã–º –∑–∞–∂–∏–º–æ–º'
      },
      {
        name: '–ú–∏–∫—Å–µ—Ä —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π DCK MX-1400',
        sku: 'DCK-MX-1400',
        price: 11300,
        category: '–ú–∏–∫—Å–µ—Ä—ã',
        description: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π –º–∏–∫—Å–µ—Ä 1400 –í—Ç —Å –¥–≤—É–º—è —Å–∫–æ—Ä–æ—Å—Ç—è–º–∏'
      },
      {
        name: '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –±–µ–Ω–∑–∏–Ω–æ–≤—ã–π DCK GG-2800',
        sku: 'DCK-GG-2800',
        price: 22500,
        category: '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã',
        description: '–ë–µ–Ω–∑–∏–Ω–æ–≤—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä 2.8 –∫–í—Ç —Å –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–æ–º'
      }
    ];
    
    let createdCount = 0;
    
    for (const productData of additionalProducts) {
      try {
        // –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
        const categories = await storage.getAllCategories();
        let categoryId = categories.find(cat => cat.name === productData.category)?.id;
        
        if (!categoryId) {
          const newCategory: InsertCategory = {
            name: productData.category,
            slug: generateSlug(productData.category),
            description: `–ö–∞—Ç–µ–≥–æ—Ä–∏—è ${productData.category}`,
            icon: getCategoryImage(productData.category)
          };
          const createdCategory = await storage.createCategory(newCategory);
          categoryId = createdCategory.id;
        }
        
        // –°–æ–∑–¥–∞–µ–º —Ç–æ–≤–∞—Ä
        const product: ProductInput = {
          sku: productData.sku,
          name: productData.name,
          slug: generateSlug(productData.name + '-' + productData.sku),
          description: productData.description,
          shortDescription: productData.category,
          price: productData.price,
          originalPrice: null,
          imageUrl: generateProductImage(productData.name, productData.sku),
          stock: 100,
          categoryId: categoryId,
          isActive: true,
          isFeatured: Math.random() > 0.7, // 30% —Ç–æ–≤–∞—Ä–æ–≤ –¥–µ–ª–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–º–∏
          tag: null
        };
        
        await storage.createProduct(product);
        createdCount++;
        console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ç–æ–≤–∞—Ä: ${productData.name}`);
        
      } catch (error: any) {
        if (error.message.includes('duplicate key') || error.message.includes('unique constraint')) {
          console.log(`‚ö†Ô∏è –¢–æ–≤–∞—Ä —Å SKU "${productData.sku}" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
        } else {
          console.log(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ "${productData.sku}": ${error.message}`);
        }
      }
    }
    
    console.log(`\nüéâ –°–æ–∑–¥–∞–Ω–æ ${createdCount} –Ω–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏`);
    
  } catch (error: any) {
    console.error('üí• –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
console.log('='.repeat(60));
console.log('üñºÔ∏è –î–û–ë–ê–í–õ–ï–ù–ò–ï –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô –í –ö–ê–¢–ê–õ–û–ì');
console.log('='.repeat(60));

Promise.resolve()
  .then(() => updateCategoryImages())
  .then(() => updateProductImages())
  .then(() => createAdditionalProducts())
  .then(() => {
    console.log('\n‚úÖ –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log('üé® –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤–æ –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ç–æ–≤–∞—Ä—ã');
    process.exit(0);
  })
  .catch((error) => {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  });